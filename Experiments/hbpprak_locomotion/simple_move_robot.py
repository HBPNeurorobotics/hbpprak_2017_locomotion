# Imported Python Transfer Function
@nrp.MapRobotPublisher('leg0_alpha', Topic('/robot_leg0_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg0_beta', Topic('/robot_leg0_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg0_delta', Topic('/robot_leg0_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg0_gamma', Topic('/robot_leg0_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg1_alpha', Topic('/robot_leg1_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg1_beta', Topic('/robot_leg1_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg1_delta', Topic('/robot_leg1_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg1_gamma', Topic('/robot_leg1_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg2_alpha', Topic('/robot_leg2_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg2_beta', Topic('/robot_leg2_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg2_delta', Topic('/robot_leg22_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg2_gamma', Topic('/robot_leg2_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg3_alpha', Topic('/robot_leg3_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg3_beta', Topic('/robot_leg3_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg3_delta', Topic('/robot_leg3_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg3_gamma', Topic('/robot_leg3_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg4_alpha', Topic('/robot_leg4_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg4_beta', Topic('/robot_leg4_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg4_delta', Topic('/robot_leg4_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg4_gamma', Topic('/robot_leg4_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg5_alpha', Topic('/robot_leg5_alpha_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg5_beta', Topic('/robot_leg5_beta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg5_delta', Topic('/robot_leg5_delta_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.MapRobotPublisher('leg5_gamma', Topic('/robot_leg5_gamma_joint_pos_cntr/command', std_msgs.msg.Float64))
@nrp.Robot2Neuron()
def simple_move_robot(t, leg0_alpha, leg0_beta, leg0_delta, leg0_gamma, leg1_alpha, leg1_beta, leg1_delta, leg1_gamma, leg2_alpha, leg2_beta, leg2_delta, leg2_gamma, leg3_alpha, leg3_beta, leg3_delta, leg3_gamma,  leg4_alpha, leg4_beta, leg4_delta, leg4_gamma, leg5_alpha, leg5_beta, leg5_delta, leg5_gamma):
    #initialization: make lauron stand
    if t < 0.5:
        leg0_alpha.send_message(std_msgs.msg.Float64(0))
        leg0_beta.send_message(std_msgs.msg.Float64(1.5))
        leg0_delta.send_message(std_msgs.msg.Float64(0))
        leg0_gamma.send_message(std_msgs.msg.Float64(-2))
        leg1_alpha.send_message(std_msgs.msg.Float64(0))
        leg1_beta.send_message(std_msgs.msg.Float64(1.5))
        leg1_delta.send_message(std_msgs.msg.Float64(0))
        leg1_gamma.send_message(std_msgs.msg.Float64(-2))
        leg2_alpha.send_message(std_msgs.msg.Float64(0))
        leg2_beta.send_message(std_msgs.msg.Float64(1.5))
        leg2_delta.send_message(std_msgs.msg.Float64(0))
        leg2_gamma.send_message(std_msgs.msg.Float64(-2))
        leg3_alpha.send_message(std_msgs.msg.Float64(0))
        leg3_beta.send_message(std_msgs.msg.Float64(1.5))
        leg3_delta.send_message(std_msgs.msg.Float64(0))
        leg3_gamma.send_message(std_msgs.msg.Float64(-2))
        leg4_alpha.send_message(std_msgs.msg.Float64(0))
        leg4_beta.send_message(std_msgs.msg.Float64(1.5))
        leg4_delta.send_message(std_msgs.msg.Float64(0))
        leg4_gamma.send_message(std_msgs.msg.Float64(-2))
        leg5_alpha.send_message(std_msgs.msg.Float64(0))
        leg5_beta.send_message(std_msgs.msg.Float64(1.5))
        leg5_delta.send_message(std_msgs.msg.Float64(0))
        leg5_gamma.send_message(std_msgs.msg.Float64(-2))
